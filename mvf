#!/bin/bash

# Function to move files from Windows to WSL
move_to_wsl() {
    if [[ "$1" =~ ^[a-zA-Z]: ]]; then
        local drive=$(echo "$1" | cut -d: -f1 | tr '[:upper:]' '[:lower:]')
        local path_part=$(echo "$1" | cut -d: -f2- | sed 's,^/,,')
        WIN_PATH="/mnt/$drive/$path_part"
    else
        WIN_PATH="/mnt/c/Users/$WIN_USER/$1"
    fi

    
    if [ ! -e "$WIN_PATH" ]; then
        echo "Error: Path $WIN_PATH does not exist in Windows."
        return 1
    fi

    
    mkdir -p ~/"$2"

    rsync -avh "$WIN_PATH" ~/"$2" && echo "Move successful!"
}

# Function to move files from WSL to Windows
move_to_win() {
    if [ ! -e ~/"$1" ]; then
        echo "Error: Path ~/$1 does not exist in WSL."
        return 1
    fi

    WIN_USER=$(powershell.exe -Command "[System.Security.Principal.WindowsIdentity]::GetCurrent().Name.Split('\')[1]" 2>/dev/null)

    if [ -z "$WIN_USER" ]; then
        echo "Error: Could not fetch Windows username."
        return 1
    fi

    WIN_USER=$(echo "$WIN_USER" | tr -d '\r')

    WIN_DEST_PATH="/mnt/c/Users/$WIN_USER/$2"

    mkdir -p "$WIN_DEST_PATH"

    rsync -avh ~/"$1" "$WIN_DEST_PATH" && echo "Move successful!"
}

if [ "$1" == "to-wsl" ]; then
    if [ -z "$2" ] || [ -z "$3" ]; then
        echo "Usage: mvf to-wsl <windows_path> <wsl_destination>"
        exit 1
    fi

    WIN_USER=$(powershell.exe -Command "[System.Security.Principal.WindowsIdentity]::GetCurrent().Name.Split('\')[1]" 2>/dev/null)

    if [ -z "$WIN_USER" ]; then
        echo "Error: Could not fetch Windows username."
        exit 1
    fi
    WIN_USER=$(echo "$WIN_USER" | tr -d '\r')

    move_to_wsl "$2" "$3"
elif [ "$1" == "to-win" ]; then
    if [ -z "$2" ] || [ -z "$3" ]; then
        echo "Usage: mvf to-win <wsl_path> <windows_destination>"
        exit 1
    fi

    move_to_win "$2" "$3"
else
    echo "Invalid option."
    echo "Usage:"
    echo "  mvf to-wsl <windows_path> <wsl_destination>"
    echo "  mvf to-win <wsl_path> <windows_destination>"
    exit 1
fi
